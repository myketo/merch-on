version: '3'

services:
  webserver:
    container_name: webserver
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./api/:/var/www
    ports:
      - '8080:80'
      - '443:443'
    networks:
      - app-network
    depends_on:
      - rest
      - database

  rest:
    container_name: rest
    restart: unless-stopped
    tty: true
    build:
      context: ./api
      dockerfile: ./Dockerfile
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./api/:/var/www
    ports:
      - '9000:9000'
    networks:
      - app-network

  redis:
    image: redis
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - ./docker/redis/data:/data
    ports:
      - '6379:6379'
    networks:
      - app-network

  database:
    image: postgres
    restart: unless-stopped
    tty: true
    container_name: database
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: merch-on
      POSTGRES_PASSWORD: kanapka
      SERVICE_TAGS: dev
      SERVICE_NAME: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/postgresql/postgresql.conf:/usr/share/postgresql/postgresql.conf
    networks:
      - app-network

  frontend:
    container_name: frontend
    build:
      context: ./app-frontend
      dockerfile: ./Dockerfile
    volumes:
      - ./app-frontend:/usr/src/app
    ports:
      - '3000:3000'

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    driver: local
